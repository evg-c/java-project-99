openapi: 3.1.0
info:
  title: Spring OpenAPI example
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
security:
- BearerAuth: []
paths:
  /api/users/{id}:
    get:
      tags:
      - users-controller
      operationId: showUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
    put:
      tags:
      - users-controller
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
    delete:
      tags:
      - users-controller
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /api/tasks/{id}:
    get:
      tags:
      - task-controller
      operationId: showTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskDTO"
    put:
      tags:
      - task-controller
      operationId: updateTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskUpdateDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskDTO"
    delete:
      tags:
      - task-controller
      operationId: deleteTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /api/task_statuses/{id}:
    get:
      tags:
      - task-status-controller
      operationId: showTaskStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskStatusDTO"
    put:
      tags:
      - task-status-controller
      operationId: updateTaskStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskStatusUpdateDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskStatusDTO"
    delete:
      tags:
      - task-status-controller
      operationId: deleteTaskStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /api/labels/{id}:
    get:
      tags:
      - label-controller
      operationId: showLabel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LabelDTO"
    put:
      tags:
      - label-controller
      operationId: updateLabel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabelUpdateDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LabelDTO"
    delete:
      tags:
      - label-controller
      operationId: deleteLabel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /api/users:
    get:
      tags:
      - users-controller
      operationId: indexOfUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDTO"
    post:
      tags:
      - users-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateDTO"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/tasks:
    get:
      tags:
      - task-controller
      operationId: index
      parameters:
      - name: params
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/TaskParamsDTO"
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaskDTO"
    post:
      tags:
      - task-controller
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskCreateDTO"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskDTO"
  /api/task_statuses:
    get:
      tags:
      - task-status-controller
      operationId: indexTaskStatuses
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaskStatusDTO"
    post:
      tags:
      - task-status-controller
      operationId: createTaskStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskStatusCreateDTO"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskStatusDTO"
  /api/login:
    post:
      tags:
      - authentication-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/labels:
    get:
      tags:
      - label-controller
      operationId: indexLabels
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LabelDTO"
    post:
      tags:
      - label-controller
      operationId: createLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabelCreateDTO"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LabelDTO"
  /welcome:
    get:
      tags:
      - welcome-controller
      operationId: welcome
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    JsonNullableString:
      type: object
      properties:
        present:
          type: boolean
    UserUpdateDTO:
      type: object
      properties:
        firstName:
          $ref: "#/components/schemas/JsonNullableString"
        lastName:
          $ref: "#/components/schemas/JsonNullableString"
        email:
          $ref: "#/components/schemas/JsonNullableString"
        password:
          $ref: "#/components/schemas/JsonNullableString"
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
    JsonNullableListLong:
      type: object
      properties:
        present:
          type: boolean
    JsonNullableLong:
      type: object
      properties:
        present:
          type: boolean
    TaskUpdateDTO:
      type: object
      properties:
        index:
          $ref: "#/components/schemas/JsonNullableLong"
        title:
          $ref: "#/components/schemas/JsonNullableString"
        content:
          $ref: "#/components/schemas/JsonNullableString"
        status:
          $ref: "#/components/schemas/JsonNullableString"
        taskLabelIds:
          $ref: "#/components/schemas/JsonNullableListLong"
        assignee_id:
          $ref: "#/components/schemas/JsonNullableLong"
      required:
      - status
    TaskDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        index:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date
        status:
          type: string
        taskLabelIds:
          type: array
          items:
            type: integer
            format: int64
        assignee_id:
          type: integer
          format: int64
    TaskStatusUpdateDTO:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/JsonNullableString"
        slug:
          $ref: "#/components/schemas/JsonNullableString"
    TaskStatusDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        slug:
          type: string
        createdAt:
          type: string
          format: date
    LabelUpdateDTO:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/JsonNullableString"
    LabelDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        createdAt:
          type: string
          format: date
    UserCreateDTO:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
          maxLength: 2147483647
          minLength: 3
      required:
      - email
    TaskCreateDTO:
      type: object
      properties:
        index:
          type: integer
          format: int64
        title:
          type: string
          maxLength: 2147483647
          minLength: 1
        content:
          type: string
        status:
          type: string
        taskLabelIds:
          type: array
          items:
            type: integer
            format: int64
        assignee_id:
          type: integer
          format: int64
      required:
      - status
    TaskStatusCreateDTO:
      type: object
      properties:
        name:
          type: string
          maxLength: 2147483647
          minLength: 1
        slug:
          type: string
          maxLength: 2147483647
          minLength: 1
    AuthRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LabelCreateDTO:
      type: object
      properties:
        name:
          type: string
          maxLength: 1000
          minLength: 3
    TaskParamsDTO:
      type: object
      properties:
        titleCont:
          type: string
        assigneeId:
          type: integer
          format: int64
        status:
          type: string
        labelId:
          type: integer
          format: int64
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
